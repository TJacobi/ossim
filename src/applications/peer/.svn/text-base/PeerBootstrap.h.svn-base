#ifndef __PEERBOOTSTRAP_H__
#define __PEERBOOTSTRAP_H__

#include <omnetpp.h>
//#include <TCPSrvHostApp.h>
//#include <TCPSocket.h>
#include <UDPBasicApp.h>
//#inlucde <UDPSocket.h>

#include <signal.h>

class PeerBootstrap: public UDPBasicApp
{
public:
    PeerBootstrap();
    virtual ~PeerBootstrap();
    bool join();
    cPacket *createPacket();

private:
    void printDebugMsg(std::string s);

protected:
    void handleMessage(cMessage *msg);
//    void initialize();
    virtual void initialize(int stage);
    virtual int numInitStages() const;

private:
    int localPeerId;
    //! True to print debug messages.
    bool debugFlag;
    //! The port opened for connection from other Peers
    int listenPort;

    // Port for binding to (seems the same as listenPort)
    int localPort;

    IPvXAddress bootstrapAddress;
    int bootstrapPort;

    // Variable for the second attempt:
    //    int localPort;
    int destPort;
    int msgByteLength;
    IPvXAddress destAddress;
};

#endif
