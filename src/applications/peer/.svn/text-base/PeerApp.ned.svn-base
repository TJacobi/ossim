//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

package simpleoverlay.applications.peer;

import inet.applications.udpapp.UDPBasicApp;
//import simpleoverlay.applications.peer.NeighborList;

//module PeerApp
simple PeerApp extends UDPBasicApp
//module PeerApp extends UDPBasicApp
{
    parameters:
        @peer(); // used by the Tracker to find all Peers in the simulation
        @class(PeerApp);
        @display("i=block/app;bgb=250,410");
        messageLength = default(4B);
        messageFreq = default(1s);
//        localPort = default(9000);
        double startTime @unit(s);
        int nNeighbor = default(4);
        double probMoreNeighbor = default(0.1);
        
        // Timer
        // double keepAliveInterval        @unit(s) = default(1s);
        double bufferMapInterval        @unit(s) = default(1s);
        double chunkSchedulingInterval  @unit(s) = default(0.5s);
        
        // Thresholds
        // int threshold_nNeighbor = default(1);
        int nNeighbor_SchedulingStart = default(1);
        double waitingTime_SchedulingStart @unit(s) = default(0.25s);
        
        int videoStreamBitRate   @unit(bps)  = default(512kbps);
        int chunkSize               @unit(byte) = default(8KiB);
        int bufferMapSize           @unit(s)    = default(120s);
        
}
