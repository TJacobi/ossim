//
// Generated file, do not edit! Created by opp_msgc 4.2 from applications/common/messages/PeerStreamingPacket.msg.
//

#ifndef _PEERSTREAMINGPACKET_M_H_
#define _PEERSTREAMINGPACKET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>applications/common/messages/PeerStreamingPacket.msg</tt> by opp_msgc.
 * <pre>
 * enum StreamingOverlayType
 * {
 *     MESH_STREAMING_OVERLAY = 0;
 *     TREE_STREAMING_OVERLAY = 1;
 * }
 * </pre>
 */
enum StreamingOverlayType {
    MESH_STREAMING_OVERLAY = 0,
    TREE_STREAMING_OVERLAY = 1
};

/**
 * Enum generated from <tt>applications/common/messages/PeerStreamingPacket.msg</tt> by opp_msgc.
 * <pre>
 * enum TreePeerStreamingPacketType
 * {
 *     TREE_DUMMY = 0;
 * }
 * </pre>
 */
enum TreePeerStreamingPacketType {
    TREE_DUMMY = 0
};

/**
 * Class generated from <tt>applications/common/messages/PeerStreamingPacket.msg</tt> by opp_msgc.
 * <pre>
 * packet PeerStreamingPacket
 * {
 *     unsigned short overlayType enum(StreamingOverlayType);  
 * }
 * </pre>
 */
class PeerStreamingPacket : public ::cPacket
{
  protected:
    unsigned short overlayType_var;

  private:
    void copy(const PeerStreamingPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PeerStreamingPacket&);

  public:
    PeerStreamingPacket(const char *name=NULL, int kind=0);
    PeerStreamingPacket(const PeerStreamingPacket& other);
    virtual ~PeerStreamingPacket();
    PeerStreamingPacket& operator=(const PeerStreamingPacket& other);
    virtual PeerStreamingPacket *dup() const {return new PeerStreamingPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned short getOverlayType() const;
    virtual void setOverlayType(unsigned short overlayType);
};

inline void doPacking(cCommBuffer *b, PeerStreamingPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, PeerStreamingPacket& obj) {obj.parsimUnpack(b);}


#endif // _PEERSTREAMINGPACKET_M_H_
