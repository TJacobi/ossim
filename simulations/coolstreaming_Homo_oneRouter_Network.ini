include ./omnetpp.ini

# -----------------------------------------------------------------------------
# ----------------------- Homo one router -------------------------------------
# -----------------------------------------------------------------------------
[Config Coolstreaming_Homo_oneRouter_Network]
network = Coolstreaming_Homo_oneRouter_Network
sim-time-limit = 120s

# Controlling the log output
#cmdenv-express-mode = false
cmdenv-express-mode = true

#record-eventlog = true

# this option has no impact on module's log output
#cmdenv-module-messages = true

# -----------------------------
# Parameter space
# -----------------------------
#Coolstreaming_Homo_oneRouter_Network.nNodePerRouter = ${3}
Coolstreaming_Homo_oneRouter_Network.nNodePerRouter = 10
num-rngs=1
seed-0-mt=9
#seed-set = 9
repeat = 1
#seed-set = ${repetition}

# -----------------------------
# ------- Recording -----------
# -----------------------------
#**.scalar-recording = false
**.vector-recording = true

#**.queue.vector-recording = false
#**.nNodePerRouter.param-record-as-scalar = true
**.maxNOP.param-record-as-scalar = true
#**.param-record-as-scalar = true
#**.chunkGenerator.vector-recording = true
**.mesh.vector-recording = true
**.player.vector-recording = true
**.videoBuffer.vector-recording = true
#**.churnModerator.vector-recording = true
#**.gossip.vector-recording = true

# -----------------------------
# --- Start times ---
# -----------------------------
*.sourceNode.peerApp.chunkGenerator.videoStartTime = 0s
*.peerNode[*].peerApp.mesh.startTime = uniform(1s, 1.001s)

# -----------------------------
# Global modules
# -----------------------------
*.globalStatistic.meshOverlayLogFile = "..//results//log.txt"

#*.meshObserver.meshOverlayLogFile = "..//results//mesh-overlay-link.txt"
#*.logger.logFile = "..//results//node-activity-log.txt"
    # -- Churn:

# ---------- Old Interface ----------
#*.churnModel = "StaticChurn"
#*.churnModerator.lowerBoundAT = 0s
#*.churnModerator.upperBoundAT = 10s

# ---------- New Interface ----------
#*.churnModel = "ExponentialChurnModel"
#*.churnModerator.arrivalRate = 2
#*.churnModerator.meanDuration = 10.0s

# Parameters are applied from [Veloso-2002]
#*.churnModel = "VelosoChurnModel"
#*.churnModerator.a = 2.52
#*.churnModerator.b = 1.55
#*.churnModerator.lambda = 5.19
#*.churnModerator.mu = 1.44

*.churnModel = "UniformChurn"
*.churnModerator.lowerBoundAT = 0.1s
*.churnModerator.upperBoundAT = 1.0s
*.churnModerator.lowerBoundDT = 2s
*.churnModerator.upperBoundDT = 10s 


# -----------------------------
# ------- Video Streaming -----
# -----------------------------
*.appSetting.bufferMapSize = 30s
*.appSetting.chunkSize = 1250B
*.appSetting.videoStreamBitRate = 400kbps

*.appSetting.interval_bufferMap = 0.5s
# -----------------------------
# Gossip Protocol specific settings
# -----------------------------
#**.gossip.c = 0
#**.appMessageInterval = 1s
#**.isoCheckInterval = 1s

# -----------------------------
# Node settings
# -----------------------------
**.localPort = 9000
**.destPort = 9000

# -- Source Node
*.sourceNode.peerApp.mesh.maxNOP = 3

# --- Peer nodes
#*.peerNode[*].peerApp.mesh.maxNOP = ${8..10}
*.peerNode[*].peerApp.mesh.maxNOP = 3
*.peerNode[*].peerApp.mesh.offsetNOP = 0

*.peerNode[*].peerApp.mesh.requestFactor_moderate = 1.2
*.peerNode[*].peerApp.mesh.requestFactor_aggressive = 2.4
*.peerNode[*].peerApp.mesh.interval_chunkScheduling = 1.0s
*.peerNode[*].peerApp.mesh.interval_rejoin = 5s
*.peerNode[*].peerApp.mesh.interval_timeout_joinReqAck = 2s
*.peerNode[*].peerApp.player.interval_recheckVideoBuffer = 0.5s
*.peerNode[*].peerApp.mesh.threshold_scarity = 3

*.peerNode[*].peerApp.mesh.interval_findMorePartner = 2.0s
*.peerNode[*].peerApp.mesh.interval_waitingPartnershipResponse = 0.5s
*.peerNode[*].peerApp.mesh.interval_startPlayer = 0.5s

*.peerNode[*].peerApp.mesh.factor_requestList = 3

# Channels

# Player settings
*.peerNode[*].peerApp.player.percent_buffer_low = 0.1
*.peerNode[*].peerApp.player.percent_buffer_high = 0.5
*.peerNode[*].peerApp.player.max_skipped_chunk = 3
*.peerNode[*].peerApp.player.interval_probe_playerStart = 0.5s

# Playing with the Queue in PPP modules
#**.ppp[*].queue.frameCapacity = 100