include ./omnetpp.ini

# -----------------------------------------------------------------------------
# ----------------------- Hetro one router -------------------------------------
# -----------------------------------------------------------------------------
[Config MTreeBone_Hetro_oneRouter_Network]
network = MTreeBone_Homo_oneRouter_Network
#sim-time-limit = ${1500s, 360s}
#sim-time-limit = 3000s

sim-time-limit = 3000s

#sim-time-limit = 6000s

# Controlling the log output
#cmdenv-express-mode = false
cmdenv-express-mode = true

#record-eventlog = true

# this option has no impact on module's log output
#cmdenv-module-messages = true

# -----------------------------
# Parameter space
# -----------------------------
#MTreeBone_Hetro_oneRouter_Network.nNodePerRouter = ${3}
MTreeBone_Homo_oneRouter_Network.nNodePerRouter = 2000
#${250,500,1000,2000}
MTreeBone_Homo_oneRouter_Network.nSimpleAttackers = 50
#${30,35,40,45,50,55}
#${0,25}

num-rngs=1
#seed-0-mt=9
#seed-0-mt=8
#seed-0-mt=2
seed-0-mt=${1,2,3,4,5,6,7,8}
#seed-set = 9
repeat = 1
#seed-set = ${repetition}

# -----------------------------
# ------- Recording -----------
# -----------------------------
**.vector-recording = false
**.scalar-recording = false
#**.scalar-recording = true
#**.vector-recording = true

#**.queue.vector-recording = false
#**.nNodePerRouter.param-record-as-scalar = true
#**.maxNOP.param-record-as-scalar = false
#**.param-record-as-scalar = true
#**.chunkGenerator.vector-recording = true
#**.mesh.vector-recording = false
#**.player.vector-recording = false
#**.videoBuffer.vector-recording = false
#**.churnModerator.vector-recording = true
#**.gossip.vector-recording = true

# -----------------------------
# --- Start times ---
# -----------------------------
*.sourceNode.peerApp.chunkGenerator.videoStartTime = 0s

# -----------------------------
# Global modules
# -----------------------------

#*.meshObserver.meshOverlayLogFile = "..//results//mesh-overlay-link.txt"
#*.logger.logFile = "..//results//node-activity-log.txt"
    # -- Churn:

# ---------- Old Interface ----------
#*.churnModel = "StaticChurn"
#*.churnModerator.lowerBoundAT = 0s
#*.churnModerator.upperBoundAT = 10s

# ---------- New Interface ----------
#*.churnModel = "ExponentialChurnModel"
#*.churnModerator.arrivalRate = 2
#*.churnModerator.meanDuration = 10.0s

# Parameters are applied from [Veloso-2002]
#*.churnModel = "VelosoChurnModel"
#*.churnModerator.a = 2.52
#*.churnModerator.b = 1.55
#*.churnModerator.lambda = 5.19
#*.churnModerator.mu = 1.44

*.churnModel = "UniformChurn"
*.churnModerator.lowerBoundAT = 0.1s
*.churnModerator.upperBoundAT = 1.0s
*.churnModerator.lowerBoundDT = 2s
*.churnModerator.upperBoundDT = 10s 


# -----------------------------
# ------- Video Streaming -----
# -----------------------------
*.appSetting.bufferMapSize = 30s
#*.appSetting.chunkSize = 2500B
#*.appSetting.chunkSize = 50000B
#*.appSetting.chunkSize = ${50000B,25000B,10000B,5000B,2500B}
*.appSetting.chunkSize = 10000B
*.appSetting.videoStreamBitRate = 400kbps

*.appSetting.interval_bufferMap = 0.5s
# -----------------------------
# Gossip Protocol specific settings
# -----------------------------
#**.gossip.c = 0
#**.appMessageInterval = 1s
#**.isoCheckInterval = 1s

# -----------------------------
# Node settings
# -----------------------------
**.localPort = 9000
**.destPort = 9000

# -- Source Node

# --- Peer nodes
#*.peerNode[*].peerApp.mesh.maxNOP = ${8..10}

*.peerNode[*].peerApp.player.interval_recheckVideoBuffer = 0.5s



# Channels

# Player settings
*.peerNode[*].peerApp.player.interval_probe_playerStart = 0.5s
**.queue.frameCapacity = 10000
#*.peerNode[{1..10}].peerApp.mesh.MaxUploadFactor = 2.1
#**.mesh.MaxUploadFactor = 1.3
#**.mesh.MaxUploadFactor = uniform(4.0,12.0)


#*.peerNode[{1..10}].peerApp.mesh.MaxUploadFactor = 2.1
**.gossipProtocol.exchangeCacheIntervall = 2.5s

#*.sourceNode.peerApp.mesh.debugOutput = true
#*.peerNode[{1..100}].peerApp.mesh.debugOutput = true


#*.sourceNode.peerApp.mesh.debugOutput = true
#*.peerNode[{1..100}].peerApp.mesh.debugOutput = true

**.appSetting.numberOfStripes = 1
#**.mesh.joinTime = uniform(0.0s, 1000.0s)

#**.mesh.joinTime = uniform(0.0s, 1490.0s)

#**.mesh.joinTime = uniform(0.0s,40.0s)
#uniform(45.0s, 1200.0s)
#**.mesh.stayDuration = ${uniform(6000.0s, 6020.0s),uniform(10.0s, 6000.0s)}

#**.mesh.stayDuration = uniform(10.0s, 1500.0s)

#**.mesh.stayDuration = uniform(25.0s, 450.0s)
#**.mesh.stayDuration = uniform(41500.0s, 42000.0s)

**.MTreeBoneStats.enablePeriodicalStructureOutput = false
**.MTreeBoneStats.PeriodicalStructureOutputIntervall = 5.0s
**.MTreeBoneStats.PeriodicalContinuityIndexIntervall = 30.0s

**.player.bufferSecondsBeforeStart = 5.0s
**.player.bufferSeekEarliestFirst = false
**.MTreeBoneSettings.kValueMode = 4
**.MTreeBoneSettings.BufferMapIntervall = 0.6s
**.MTreeBoneSettings.NumberOfPartnersMaximum = 16
**.MTreeBoneSettings.NumberOfPartnersDesired = 8
**.MTreeBoneSettings.ChunkScheduleInterval = 0.75s
**.MTreeBoneSettings.ChunkRequestTimeout = 1.0s
**.source.MaxUploadFactor = 20
**.peer.MaxUploadFactor = 100

**.source.joinTime = 0s
**.source.stayDuration = 0s

**.peer.joinTime = uniform(0.0s, 1000.0s)
**.peer.stayDuration = 3000s
#uniform(250.0s, 3000.0s)



**.source.debugOutput = false
**.peer.debugOutput = false
**.attacker.debugOutput = false

**.attacker.joinTime = 500s
**.attacker.stayDuration = 0s
**.attacker.startAttackTime = 1000s
**.attacker.denyPull = true
**.attacker.denyPush = true
**.attacker.fastUpdateGossiping = true
**.attacker.numFakeChildren = 100

# Playing with the Queue in PPP modules
#**.ppp[*].queue.frameCapacity = 100